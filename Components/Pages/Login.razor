@page "/Login"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.WebUtilities
@using WhoKnowsV2.util
@inject NavigationManager Navigation
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <div class="form-group">
        <InputText id="username" @bind-Value="loginModel.Username" placeholder="Username" />
    </div>
    <div class="form-group">
        <InputText id="password" @bind-Value="loginModel.Password" placeholder="Password" type="password" />
    </div>
    <button type="submit">Login</button>
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }
</EditForm>

@code {

    protected override void OnInitialized()
    {
        Console.WriteLine("Hello");
    }

    private LoginRequest loginModel = new LoginRequest();
    private string errorMessage;

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("https://localhost:7100/api/Login/login", loginModel);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
            await ((ApiAuthenticationStateProvider)AuthStateProvider).MarkUserAsAuthenticated(result.Token);

            // Check for ReturnUrl and redirect
            var returnUrl = Navigation.ToAbsoluteUri(Navigation.Uri).Query;
            var returnUrlParam = QueryHelpers.ParseQuery(returnUrl)["ReturnUrl"].FirstOrDefault();

            // Redirect to ReturnUrl or fallback to home
            Navigation.NavigateTo(!string.IsNullOrWhiteSpace(returnUrlParam) ? returnUrlParam : "/");
        }
        else
        {
            errorMessage = "Invalid username or password.";
        }
    }

    public class LoginRequest
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }

    public class LoginResponse
    {
        public string Token { get; set; }
    }
}
