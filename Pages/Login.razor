@page "/login"
@using System.Net.Http.Headers
@using BlazorWhoknowsV2.Provider
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [AllowAnonymous]

<h3>Login</h3>


@* 
hey *@
@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<EditForm Model="loginRequest" OnValidSubmit="HandleLogin" FormName="this">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" class="form-control" @bind-Value="loginRequest.Username" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginRequest.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
   
    private LoginRequest loginRequest = new LoginRequest();
    private string ErrorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var response = await HttpClient.PostAsJsonAsync("https://40.87.131.145/api/login", loginRequest);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
                await ((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(result.Token);
                NavigationManager.NavigateTo("/");
            }
            else
            {
                ErrorMessage = "Invalid login attempt.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "An error occurred during login.";
        }
    }

    private class LoginRequest
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }

    private class LoginResponse
    {
        public string Token { get; set; }
    }
}
