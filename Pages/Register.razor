@page "/register"
@using System.Net.Http.Headers
@using BlazorWhoknowsV2.Provider
@inject HttpClient HttpClient
@inject IHttpClientFactory HttpClientFactory // Inject IHttpClientFactory
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [AllowAnonymous]

<h3>Register</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<EditForm Model="registerRequest" OnValidSubmit="HandleRegister" FormName="this">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" class="form-control" @bind-Value="registerRequest.Username" />
    </div>

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" type="email" class="form-control" @bind-Value="registerRequest.Email" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="registerRequest.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegisterRequest registerRequest = new RegisterRequest();
    private string ErrorMessage;
    private async Task HandleRegister()
    {
        try
        {
            

            var client = HttpClientFactory.CreateClient("ApiClient");
            var response = await client.PostAsJsonAsync("register", registerRequest);

            //var response = await HttpClient.PostAsJsonAsync("https://teamdood.dk/api/register", registerRequest);

            if (response.IsSuccessStatusCode)
            {
                // Registration successful, redirect to login page
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                ErrorMessage = "Registration failed. Please try again.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "An error occurred during registration.";
        }
    }


    private class RegisterRequest
    {
        public string Username { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
    }

    private class RegisterResponse
    {
        public string Token { get; set; }
    }
}
